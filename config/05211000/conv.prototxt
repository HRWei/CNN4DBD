layer {
  name: "Input"
  type: "ImageData"
  top: "Data"
  top: "Label"
  transform_param {
    scale: 0.00390625
  }
  image_data_param {
    source: "./pixelate/config/05211000/train.txt"
    batch_size: 20
    is_color: false
  }
}
layer {
  name: "Flat1"
  type: "Python"
  bottom: "Data"
  top: "Flat1"
  python_param {
    module: "ImgFlattenTest.ImgFlatten"
    layer: "ImgFlatten"
    param_str: "{'kernel_size':5, 'stride':1}"
  }
}
layer {
  name: "Conv1"
  type: "Convolution"
  bottom: "Flat1"
  top: "Conv1"
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 5
    stride: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "Pool1"
  type: "Pooling"
  bottom: "Conv1"
  top: "Pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Flat2"
  type: "Python"
  bottom: "Pool1"
  top: "Flat2"
  python_param {
    module: "ImgFlattenTest.ImgFlatten"
    layer: "ImgFlatten"
    param_str: "{'kernel_size':5, 'stride':1}"
  }
}
layer {
  name: "Conv2"
  type: "Convolution"
  bottom: "Flat2"
  top: "Conv2"
  convolution_param {
    num_output: 20
    pad: 0
    kernel_size: 5
    stride: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "Pool2"
  type: "Pooling"
  bottom: "Conv2"
  top: "Pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Conv3"
  type: "Convolution"
  bottom: "Pool2"
  top: "Conv3"
  convolution_param {
    num_output: 100
    pad: 0
    kernel_size: 5
    stride: 5
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ReLU1"
  type: "ReLU"
  bottom: "Conv3"
  top: "Conv3"
}
layer {
  name: "InnerProduct1"
  type: "InnerProduct"
  bottom: "Conv3"
  top: "InnerProduct1"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "SoftmaxWithLoss1"
  type: "SoftmaxWithLoss"
  bottom: "InnerProduct1"
  bottom: "Label"
  top: "SoftmaxWithLoss1"
}